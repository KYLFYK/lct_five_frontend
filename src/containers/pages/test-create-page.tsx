import styled from '@emotion/styled';import { Tabs } from 'antd';import { FC, useState } from 'react';import { TestingFullDescription } from '../../components/testing/testing-full-description';import {  TestingPreview,  TestingWrapper,} from '../../components/testing/testing-preview';import { TestingSetting } from '../../components/testing/testing-setting';import {  TestEditContext,  useTestEditContext,} from '../../context/testing/test-edit-context';import { TTestEditAreaTab } from '../../types/tests';const Wrapper = styled('div')`  display: grid;  grid-template-columns: 6fr 5fr;  grid-column-gap: 30px;`;const TestingTabs = styled(TestingWrapper)`  margin-bottom: 30px;  padding-block: 12px;`;const testTabs = [  {    key: TTestEditAreaTab.MAIN,    label: 'Основная информация',  },  {    key: TTestEditAreaTab.FULL_DESCRIPTION,    label: 'Подробное описание',  },];const TestCreate: FC = () => {  const { baseSettings, stages } = useTestEditContext();  const [currentTab, setCurrentTab] = useState<TTestEditAreaTab>(    TTestEditAreaTab.MAIN  );  return (    <Wrapper>      <div>        <TestingTabs>          <Tabs items={testTabs} onChange={setCurrentTab as any} />        </TestingTabs>        {currentTab === TTestEditAreaTab.MAIN && (          <TestingPreview testData={baseSettings} stages={stages} />        )}        {currentTab === TTestEditAreaTab.FULL_DESCRIPTION && (          <TestingFullDescription            descriptionFull={baseSettings.descriptionFull}          />        )}      </div>      <div>        <TestingSetting currentTab={currentTab} />      </div>    </Wrapper>  );};export const TestCreatePage: FC = () => {  return (    <TestEditContext>      <TestCreate />    </TestEditContext>  );};