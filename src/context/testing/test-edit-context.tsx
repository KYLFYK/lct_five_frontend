import {  Dispatch,  FC,  PropsWithChildren,  SetStateAction,  createContext,  useContext,  useState,} from 'react';import { TTestBaseSettings, TTestStage } from '../../types/tests';type TTestEditContext = {  baseSettings: TTestBaseSettings;  editBaseSettings: Dispatch<SetStateAction<TTestBaseSettings>>;  stages: TTestStage[];  editStages: Dispatch<SetStateAction<TTestStage[]>>;};const initialValues: TTestEditContext = {  baseSettings: {    title: undefined,    descriptionShort: undefined,    descriptionFull: [],  },  editBaseSettings: () => {},  stages: [],  editStages: () => {},};const context = createContext<TTestEditContext>({  ...initialValues,});export const useTestEditContext = () => useContext(context) as TTestEditContext;export const TestEditContext: FC<PropsWithChildren> = ({ children }) => {  const [baseSettings, setBaseSettings] = useState<TTestBaseSettings>({    ...initialValues.baseSettings,  });  const [stages, editStages] = useState<TTestStage[]>([    ...initialValues.stages,  ]);  return (    <context.Provider      value={{        baseSettings: baseSettings,        editBaseSettings: setBaseSettings,        stages,        editStages,      }}    >      {children}    </context.Provider>  );};