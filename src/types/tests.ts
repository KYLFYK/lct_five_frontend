export enum TTestEditAreaTab {  MAIN = 'main',  FULL_DESCRIPTION = 'descriptionFull',  QUESTIONS = 'questions',  STAGE = 'stage',}export type TListedTest = {  id: string;  title: string;  description: string;  createDate: string;  updateDate: string;};export type TTabledTest = {  key: string;} & TListedTest;export type TTestingStatus =  | 'complete'  | 'failure'  | 'in-progress'  | 'not-started'  | 'time-end';export type TNodeType = 'title' | 'text' | 'image' | 'video';export type TNode = {  type?: TNodeType;  key?: string;  value?: string;  order?: number;  level?: 1 | 2 | 3 | 4 | 5;  videoViewingGuarantee?: boolean;};export type TTestBaseSettings = {  title?: string;  descriptionShort?: string;  descriptionFull: TNode[];  useStages?: boolean;};export type TQuestion = {  id: string;  question: TNode[];  order?: number;  multiple?: boolean;  variants: {    label: string;    correct?: boolean;    id: string;  }[];};export type TAnswer = {  questionId: string;  stageId?: string;  answer: string;};export type TTestStage = {  id: string;  title?: string;  descriptionShort?: string;  descriptionFull: TNode[];  questions: TQuestion[];  order?: number;  deadLine?: string;};export type TTesting = {  id: string;  createDate: string;  updateDate: string;  baseInfo: TTestBaseSettings;  stages: TTestStage[];  questions: TQuestion[];};