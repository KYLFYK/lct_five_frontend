import dayjs from 'dayjs';import { TTesting } from '../types/tests';export const mockTesting: TTesting = {  id: 'testing',  createDate: dayjs()    .add(-23, 'days')    .add(4, 'hours')    .add(32, 'minutes')    .format(),  updateDate: dayjs()    .add(-12, 'days')    .add(7, 'hours')    .add(23, 'minutes')    .format(),  baseInfo: {    title: 'Тестирование JS',    descriptionShort: 'Тестирование на базовые знания JS',    descriptionFull: [      {        type: 'title',        key: 'title-123',        value: 'Узнай как хорошо ты знаешь JS',        level: 3,        order: 1,      },      {        type: 'image',        key: 'image-456',        value:          'https://storage.yandexcloud.net/artics-inner-static/assist/mock_photo_1.png',        order: 2,      },      {        type: 'text',        key: 'text-456',        value:          'Тестирование на базовые знания по JavaScript – это важная часть процесса отбора квалифицированных разработчиков. Такие тесты охватывают фундаментальные аспекты языка программирования, чтобы оценить уровень основных навыков у кандидата. Вопросы могут включать в себя темы, такие как типы данных, циклы, условные операторы, область видимости переменных, работа с функциями и объектами.\n' +          '\n' +          'Кандидаты могут столкнуться с задачами, требующими понимания принципов асинхронного программирования, обработки событий, работы с DOM и базовых концепций, таких как замыкания. Тестирование на базовые знания по JavaScript помогает работодателям оценить, насколько кандидат хорошо освоил основы языка, что важно для успешного участия в разработке веб-приложений. Это также позволяет выявить пробелы в знаниях, которые могут потребовать дополнительного обучения или опыта.',        order: 3,      },      {        type: 'video',        key: 'video-431',        value:          'https://storage.yandexcloud.net/artics-inner-static/assist/mock.mp4',        order: 2,      },    ],    useStages: true,  },  questions: [],  stages: [    {      id: 'stage-1',      title: 'Переменные',      descriptionShort: 'На сколько вы понимаете что такое переменные?',      descriptionFull: [],      order: 1,      deadLine: dayjs()        .add(21, 'days')        .add(4, 'hours')        .add(45, 'minutes')        .format(),      questions: [        {          id: 'q1',          question: [            {              type: 'text',              key: 'text-1',              value:                'Какие ключевые слова используются для объявления переменных в JavaScript?',            },          ],          order: 1,          multiple: true,          variants: [            { label: 'var', correct: true, id: 'q1v1' },            { label: 'let', correct: true, id: 'q1v2' },            { label: 'const', correct: true, id: 'q1v3' },            { label: 'variable', correct: false, id: 'q1v4' },          ],        },        {          id: 'q2',          question: [            {              type: 'text',              key: 'text-2',              value: 'Каким образом можно обозначить константу в JavaScript?',            },          ],          order: 2,          multiple: false,          variants: [            { label: 'var', correct: false, id: 'q2v1' },            { label: 'let', correct: false, id: 'q2v2' },            { label: 'const', correct: true, id: 'q2v3' },            { label: 'constant', correct: false, id: 'q2v4' },          ],        },        {          id: 'q3',          question: [            {              type: 'text',              key: 'text-3',              value:                "Могут ли переменные объявленные с использованием 'const' быть переопределены?",            },          ],          order: 3,          multiple: false,          variants: [            { label: 'Да', correct: false, id: 'q3v1' },            { label: 'Нет', correct: true, id: 'q3v2' },          ],        },        {          id: 'q4',          question: [            {              type: 'text',              key: 'text-4',              value: 'Что такое hoisting в контексте переменных в JavaScript?',            },          ],          order: 4,          multiple: false,          variants: [            {              label: 'Это процесс поднятия переменных в начало файла',              correct: false,              id: 'q4v1',            },            {              label:                'Это поведение, при котором переменные могут быть использованы до их объявления',              correct: true,              id: 'q4v2',            },            {              label: 'Это способ объявления переменных внутри функций',              correct: false,              id: 'q4v3',            },          ],        },        {          id: 'q5',          question: [            {              type: 'text',              key: 'text-4',              value:                "Как можно скопировать значение переменной 'a' в переменную 'b'?",            },          ],          order: 5,          multiple: false,          variants: [            { label: 'b = a', correct: true, id: 'q5v1' },            { label: 'b := a', correct: false, id: 'q5v2' },            { label: 'copy(b, a)', correct: false, id: 'q5v3' },            { label: 'a << b', correct: false, id: 'q5v4' },          ],        },      ],    },    {      id: 'stage-2',      title: 'Методы массивов',      descriptionShort: 'Частоиспользуемые методы',      descriptionFull: [],      order: 1,      deadLine: dayjs()        .add(24, 'days')        .add(4, 'hours')        .add(45, 'minutes')        .format(),      questions: [        {          id: 'q1',          question: [            {              type: 'text',              key: 'q1',              value:                'Какой метод используется для добавления элемента в конец массива в JavaScript?',            },          ],          order: 1,          multiple: false,          variants: [            { label: 'push()', correct: true, id: 'q1v1' },            { label: 'pop()', correct: false, id: 'q1v2' },            { label: 'append()', correct: false, id: 'q1v3' },            { label: 'addToEnd()', correct: false, id: 'q1v4' },          ],        },        {          id: 'q2',          question: [            {              type: 'text',              key: 'q2',              value:                'Какой метод используется для удаления последнего элемента из массива в JavaScript?',            },          ],          order: 2,          multiple: false,          variants: [            { label: 'pop()', correct: true, id: 'q2v1' },            { label: 'push()', correct: false, id: 'q2v2' },            { label: 'removeLast()', correct: false, id: 'q2v3' },            { label: 'deleteLast()', correct: false, id: 'q2v4' },          ],        },        {          id: 'q3',          question: [            {              type: 'text',              key: 'q3',              value:                'Какой метод используется для объединения двух массивов в JavaScript?',            },          ],          order: 3,          multiple: false,          variants: [            { label: 'merge()', correct: false, id: 'q3v1' },            { label: 'concat()', correct: true, id: 'q3v2' },            { label: 'combine()', correct: false, id: 'q3v3' },            { label: 'join()', correct: false, id: 'q3v4' },          ],        },        {          id: 'q4',          question: [            {              type: 'text',              key: 'q4',              value:                'Какой метод используется для изменения элемента массива по его индексу?',            },          ],          order: 4,          multiple: false,          variants: [            { label: 'update()', correct: false, id: 'q4v1' },            { label: 'modify()', correct: false, id: 'q4v2' },            { label: 'splice()', correct: false, id: 'q4v3' },            { label: 'splice() и fill()', correct: true, id: 'q4v4' },          ],        },        {          id: 'q5',          question: [            {              type: 'text',              key: 'q5',              value:                'Какой метод используется для фильтрации элементов массива на основе заданной функции?',            },          ],          order: 5,          multiple: false,          variants: [            { label: 'select()', correct: false, id: 'q5v1' },            { label: 'filter()', correct: true, id: 'q5v2' },            { label: 'search()', correct: false, id: 'q5v3' },            { label: 'find()', correct: false, id: 'q5v4' },          ],        },      ],    },    {      id: 'stage-3',      title: 'Прототипы',      descriptionShort: 'prototype в JS',      descriptionFull: [],      order: 1,      deadLine: dayjs()        .add(27, 'days')        .add(4, 'hours')        .add(45, 'minutes')        .format(),      questions: [        {          id: 'q6',          question: [            {              type: 'text',              key: 'q6',              value: 'Что такое прототип в JavaScript?',            },          ],          order: 6,          multiple: false,          variants: [            {              label: 'Это основной объект в программе',              correct: false,              id: 'q6v1',            },            {              label: 'Это шаблон, от которого создаются другие объекты',              correct: true,              id: 'q6v2',            },            { label: 'Это функция-конструктор', correct: false, id: 'q6v3' },            {              label: 'Это спецификация языка JavaScript',              correct: false,              id: 'q6v4',            },          ],        },        {          id: 'q7',          question: [            {              type: 'text',              key: 'q7',              value:                'Как можно создать объект с определенным прототипом в JavaScript?',            },          ],          order: 7,          multiple: false,          variants: [            { label: 'Object.create()', correct: true, id: 'q7v1' },            { label: 'new Object()', correct: false, id: 'q7v2' },            { label: 'prototype.create()', correct: false, id: 'q7v3' },            { label: 'Object.setPrototype()', correct: false, id: 'q7v4' },          ],        },        {          id: 'q8',          question: [            {              type: 'text',              key: 'q8',              value:                'Как можно добавить свойство к прототипу существующего объекта?',            },          ],          order: 8,          multiple: false,          variants: [            { label: 'Прямым присвоением', correct: false, id: 'q8v1' },            { label: 'Object.assign()', correct: false, id: 'q8v2' },            {              label: 'Изменением свойства prototype',              correct: true,              id: 'q8v3',            },            { label: 'prototype.addProperty()', correct: false, id: 'q8v4' },          ],        },        {          id: 'q9',          question: [            {              type: 'text',              key: 'q9',              value:                'Как проверить, является ли объект экземпляром определенного конструктора?',            },          ],          order: 9,          multiple: false,          variants: [            { label: 'objectOf()', correct: false, id: 'q9v1' },            { label: 'instanceof', correct: true, id: 'q9v2' },            { label: 'isInstance()', correct: false, id: 'q9v3' },            { label: 'checkInstance()', correct: false, id: 'q9v4' },          ],        },        {          id: 'q10',          question: [            {              type: 'text',              key: 'q10',              value: 'Что такое цепочка прототипов в JavaScript?',            },          ],          order: 10,          multiple: false,          variants: [            {              label: 'Это последовательность вызовов функций',              correct: false,              id: 'q10v1',            },            {              label: 'Это структура данных для хранения объектов',              correct: false,              id: 'q10v2',            },            {              label:                'Это связанные объекты, где каждый объект имеет свой прототип',              correct: true,              id: 'q10v3',            },            {              label: 'Это часть синтаксиса языка JavaScript',              correct: false,              id: 'q10v4',            },          ],        },      ],    },  ],};