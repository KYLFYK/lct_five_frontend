import styled from '@emotion/styled';import { Steps } from 'antd';import Typography from 'antd/lib/typography';import { FC, useMemo, useState } from 'react';import { TTestBaseSettings, TTestStage } from '../../types/tests';export const TestingWrapper = styled('div')`  padding: 30px 40px;  border-radius: 30px;  background-color: ${({ theme }) => theme.COLORS.WHITE.COMMON};  box-shadow: ${({ theme }) => theme.COLORS.SHADOWS.SINGLE_SM};  max-height: calc(100vh - 80px);  overflow-y: auto;`;const StepsWrapper = styled('div')`  margin-top: 40px;  user-select: none;`;type TProps = {  testData: TTestBaseSettings;  stages: TTestStage[];};export const TestingPreview: FC<TProps> = ({ testData, stages }) => {  const [currentStep, setCurrentStep] = useState(0);  const stepsList = useMemo(() => {    if (currentStep > stages.length) {      setCurrentStep(0);    }    return stages.map((el) => ({      title: el.title,      description: el.descriptionShort,    }));  }, [stages]);  return (    <TestingWrapper>      <Typography.Title level={3}>        {testData.title ?? 'Без названия'}      </Typography.Title>      {testData.descriptionShort && (        <Typography.Paragraph>{testData.descriptionShort}</Typography.Paragraph>      )}      <StepsWrapper>        <Typography.Title level={5}>Этапы тестирования</Typography.Title>        <Steps          current={currentStep}          onChange={setCurrentStep}          items={stepsList}        />      </StepsWrapper>    </TestingWrapper>  );};